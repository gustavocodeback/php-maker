<?php defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * %_CONTROLLER_NAME_%
 * 
 * Controller de crud para %_MODEL_CLASS_%
 * 
 */
class %_CONTROLLER_NAME_% extends SG_Controller {

	/**
	 * model
	 * 
	 * model sendo usada no crud
	 *
	 * @var [type]
	 */
	public $model;

	/**
	 * __construct
	 * 
	 * método construtor
	 * 
	 */
	public function __construct() {
		parent::__construct();

		// carrega a model
		$this->load->model( '%_MODEL_FILE_%' );
		$this->model = $this->%_MODEL_CLASS_%;
	}

	/**
	 * __validate
	 * 
	 * valida um formulário
	 *
	 * @return void
	 */
	public function __validate() {
		$rules = [];

		// valida o formulário
        $this->form_validation->set_rules( $rules );
        return $this->form_validation->run();
	}

	/**
	 * list
	 * 
	 * lista os dados
	 *
	 * @return void
	 */
	public function list() {
		
		// lista os dados
		$list = $this->model->paginate();

		// seta na view
		$this->view->set( 'list', $list );

		// carrega a view
		$this->view->render( 'default-list-view' );
	}

	/**
	 * delete
	 * 
	 * deleta um dado
	 *
	 * @param boolean $id
	 * @return void
	 */
	public function delete( $id = false ) {

		// carrega a entidade
		$item = $this->model->findById( $id );
		if ( !$item ) close_page( 'home' );

		// deleta o item
		$item->delete();

		// carrega a view
		$this->view->render( 'default-item-view' );
	}

	/**
	 * create
	 * 
	 * cria um dado
	 *
	 * @return void
	 */
	public function create() {

		// carrega o item
		$item = $this->model->new();

		// seta na view
		$this->view->set( 'item', $item );

		// carrega o formulario de criacao
		$this->view->render( 'default-create-view' );
	}

	/**
	 * update
	 * 
	 * faz a atualização de um dado
	 *
	 * @param boolean $id
	 * @return void
	 */
	public function update( $id = false ) {

		// carrega a entidade
		$item = $this->model->findById( $id );

		// seta na view
		$this->view->set( 'item', $item );

		// carrega a view
		$this->view->render( 'default-view-item' );
	}

	/**
	 * save
	 * 
	 * salva um dado
	 *
	 * @param boolean $id
	 * @return void
	 */
	public function save( $id = false ) {

		// verifica se existe um id
		if ( $id ) {
			$item = $this->model->findById( $id );
		} else {
			$item = $this->model->new();
		}

		// valida o formulario
		if ( $this->__validate() ) {

			// preenche a entidade
			$item->fill( $this->input->post() );

			// tenta salvar o item
			if ( $item->save() ) {
				$this->view->set( 'success', 'Item salvo com sucesso' );
			} else {
				$this->view->set( 'errors', 'Erro ao salvar o item' );
			}
		} else {
			$this->view->set( 'errors', validation_errors() );
		}

		// carrega a view
		$this->view->render( 'view-default' );
	}
}

/* end of file */
